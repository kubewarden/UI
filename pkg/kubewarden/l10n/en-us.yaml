kubewarden:
  title: Kubewarden
  dashboard:
    title: Dashboard
    install: Install
    notInstalled: Kubewarden is not installed
    button: Install Kubewarden Prerequisites
    intro: Welcome to Kubewarden
    blurb: A Dynamic Admission Controller for Kubernetes
    description: |
      Kubewarden is a policy engine for Kubernetes. It helps with keeping your Kubernetes clusters secure and compliant. Kubewarden policies can be written using regular programming languages or Domain Specific Languages (DSL). Policies are compiled into WebAssembly modules that are then distributed using traditional container registries.
    getStarted: Get Started
    issues: Issues
    headers:
      policyServer:
        title: Policy Servers
        description: Kubewarden uses Policy Servers to receive requests to be validated. It does that by executing Kubewarden's policies.
        linkText: Create Policy Server
        slotTitle: Policy Server Pods
      admissionPolicy:
        title: Admission Policies
        description: An Admission Policy is a namespace-wide resource. The policy will process only the requests that are targeting the Namespace where the Admission Policy is defined.
        linkText: Create Admission Policy
        slotTitle: Policies
      clusterAdmissionPolicy:
        title: Cluster Admission Policies
        description: The Cluster Admission Policy resource is the core of the Kubewarden stack. This resource defines how policies evaluate requests.
        linkText: Create Cluster Admission Policy
        slotTitle: Policies
      modes:
        title: Policy Modes
        monitor: Monitor
        protect: Protect
    appInstall:
      title: Kubewarden App Install
      description: This will take you to the app installation page for Kubewarden.
      button: Install Kubewarden
      stepTitle: Kubewarden Install
      reload: Unable to fetch Kubewarden Helm chart - reload required.
      versionError:
        title: Chart Version not found.
        message: Unable to determine the latest stable version of the kubewarden-controller chart. Please make sure the Helm repository is configured correctly.
    prerequisites:
      title: Prerequisites
      certManager:
        title: Install Cert-Manager Package
        description: The kubewarden-controller depends on cert-manager. You need cert-manager to be installed before installing the kubewarden-controller chart.
        manualStep: |
          Click the button below and follow the <a target="_blank" rel="noopener noreferrer nofollow" href="https://docs.kubewarden.io/quick-start#installation">Documentation</a>, or run the <code>kubectl</code> command to install the latest version of cert-manager:
        applyCommand: 'kubectl apply -f https://github.com/jetstack/cert-manager/releases/latest/download/cert-manager.yaml'
        openShell: Open Kubectl Shell
        stepProgress: The active step will progress once Cert-Manager is installed.
      repository:
        title: Repository
        description: You will need the Kubewarden Helm repository (https://charts.kubewarden.io) to install the `kubewarden` chart.
      airGapped:
        warning: 'An air-gapped installation has been detected, this will require intervention to enable access to Kubewarden images and policies. It is necessary to make them available from an OCI registry that is accessible to the cluster.'
        docs: |
          Follow the documentation to setup an OCI registry for further installation.
  tabs:
    general:
      label: General
      nameOverride:
        label: nameOverride
        description: Replaces the release name of the chart in Chart.yaml file when this is used to construct Kubernetes object names.
      fullnameOverride:
        label: fullnameOverride
        description: Completely replaces the generated release name.
      imagePullSecrets:
        label: Image Pull Secrets
        description: Secrets to pull container images from private registries.
      image:
        label: Image
        description: Controller image to be used.
        repository: Repository
        tag: Tag
      preDeleteJob: Kubectl image to be used in the pre-delete helm hook.
      podAnnotations: Pod Annotations
      nodeSelector: Node Selector
      tolerations: Tolerations
      affinity: Affinity
      tls:
        source: Source
        certManagerIssuerName: Cert-Manager Issuer Name
    telemetry:
      label: Telemetry
      checkbox: Enabled
      port: Port
      tracing:
        label: Tracing
        endpoint: Endpoint
        jaeger: Jaeger endpoint to send traces.
        placeholder: all-in-one-collector.jaeger.svc.cluster.local:14250
    verification:
      label: Verification
    registry:
      label: Container Registry
  policyServer:
    title: Policy Servers
    noDefaultsInstalled:
      description: |
        The default PolicyServer and policies are not installed, click the button below to begin installing this chart. See the <a target="_blank" rel="noopener noreferrer nofollow" href="https://docs.kubewarden.io/quick-start#installation">documentation</a> for more information on installing charts.
      button: Install Chart
    policyGauge:
      byStatus: Policies by Status
      traces: Policy Validations
    groups:
      kind: Policy Type
  admissionPolicy:
    title: Admission Policies
    description: AdmissionPolicy is a namespace-wide resource. These policies will process only the requests that are targeting the Namespace where the AdmissionPolicy is defined.
  clusterAdmissionPolicy:
    title: Cluster Admission Policies
    description: ClusterAdmissionPolicy is a cluster-wide resource. These policies will process all requests within the cluster where the ClusterAdmissionPolicy is defined.
  customPolicy:
    badge: Custom
    title: Custom Policy
    description: A generic template for using your own policy.
  policies:
    noArtifactHub: Official Kubewarden policies are hosted on <a href="https://artifacthub.io/packages/search?kind=13" target="_blank" rel="noopener noreferrer nofollow">ArtifactHub</a>, in order to show these you will need to add `artifacthub.io` to the whitelist-domain setting.
    noRules: There are no rules configured for this policy.
    namespaceWarning: This policy is targeting Rancher specific namespaces which will cause catastrophic failures with your Rancher deployment.
    official: Official Kubewarden Policy
    airgap:
      banner: 'An air-gapped installation is detected, you will be unable to use the policies listed within the ArtifactHub catalog. You are still able to deploy a custom policy by referencing a WebAssembly module that is accessible to this cluster.'
  utils:
    keyword: Filter by Keyword
    organization: Filter by Organization
    resource: Filter by Resource Type
    resetFilter: Reset Filter
  tracing:
    description: Tracing allows to collect fine grained details about policy evaluations. It can be a useful tool for debugging issues inside of your Kubewarden deployment and policies.
    prerequisites:
      label: Prerequisites
      description: There are a few resources which need to be installed for tracing to work correctly with the Kubewarden Controller.
      warning: The deployments of these resources can take a few minutes to become active.
    installOpenTelemetry: |
      Click the button below  or run the <code>kubectl</code> command to install the latest version of OpenTelemetry.
    openTelemetry: |
      The <a href="https://github.com/open-telemetry/opentelemetry-operator" target="_blank" rel="noopener noreferrer nofollow">OpenTelemetry Operator</a> must be installed, follow the <a href="https://docs.kubewarden.io/operator-manual/telemetry/opentelemetry/quickstart#install-opentelemetry" target="_blank" rel="noopener noreferrer nofollow">documentation</a> to setup the OpenTelemetry Operator.
    jaeger: |
      The <a href="https://github.com/jaegertracing/jaeger-operator" target="_blank" rel="noopener noreferrer nofollow">Jaeger Operator and Instance</a> must be installed, follow the <a href="https://docs.kubewarden.io/operator-manual/telemetry/tracing/quickstart" target="_blank" rel="noopener noreferrer nofollow">documentation</a> to setup tracing for your policies.
    noRelatedPolicies: No related policies found.
    noRelatedTraces: No tracing data exists for the related policies.
    noTraces: No tracing data exists for this policy.
    config: 
      label: |
        Tracing must be <a href="https://docs.kubewarden.io/operator-manual/telemetry/tracing/quickstart#install-kubewarden" target="_blank" rel="noopener noreferrer nofollow">configured</a> with a Jaeger endpoint in the "Telemetry" tab of the Kubewarden Controller chart settings.
      link: Update Config
  monitoring:
    notInstalled: |
      The Monitoring app is not installed, this will will need to be installed and configured to enable metrics. Follow <a href="https://docs.kubewarden.io/operator-manual/telemetry/metrics/quickstart#install-prometheus" target="_blank" rel="noopener noreferrer nofollow">these steps</a> to add the Kubewarden ServiceMonitor for Prometheus.
    install: Install Monitoring
    prerequisites:
      label: Prerequisites
      description: There are a few resources which need to be installed and configured correctly for monitoring to be available.
      warning: The deployments of these resources can take a few minutes to become active.
      monitoringApp:
        label: The Rancher Monitoring app must be installed with the Kubewarden Service Monitors added to the Prometheus spec. Follow the <a href="https://docs.kubewarden.io/operator-manual/ui-extension/metrics#install" target="_blank" rel="noopener noreferrer nofollow">documentation</a> to configure Prometheus.
        install: Install App
        edit: Edit Config
        chartError: The Rancher Monitoring chart cannot be found, ensure the repository exists and try reloading the page.
      configMap:
        label: Grafana Dashboards (ConfigMaps) for the Policy Servers and for Kubewarden Policies must be created.
        button: Add Dashboards
        tooltip:
          appNotInstalled: The Rancher Monitoring app is not yet installed.
          nsNotFound: "The Namespace `cattle-dashboards` cannot be found."
          appNotConfigured: The Rancher Monitoring app is not configured correctly, please edit the configuration to add the appropriate Service Monitors.
      controllerConfig:
        label: The Kubewarden Controller must be configured to enable metrics. Follow <a href="https://docs.kubewarden.io/operator-manual/ui-extension/metrics#2-enable-telemetry-for-your-rancher-kubewarden-controller-resource" target="_blank" rel="noopener noreferrer nofollow">these steps</a> to properly configure the kubewarden-controller chart.
        button: Edit Config
        tooltip: The prerequisite steps have not been completed.
        chartError: The Kubewarden Controller chart cannot be found, ensure the repository exists and try reloading the page.
    warning:
      noProxy: The Grafana proxy URL can not be found or is configured incorrectly.

  metrics:
    notInstalled: The Grafana dashboard for this Kubewarden resource can not be found. You need to create the ConfigMap for the dashboard.
    reload: Grafana dashboard created - reload required
    noService: The Metrics service is not currently active or is not installed correctly. Check the status of the Monitoring app.

  policyConfig:
    tabs:
      general: General
      rules: Rules
      namespaceSelector: Namespace Selector
      settings: Settings
      contextAware: Context Aware Resources
    serverSelect:
      label: Policy Server
      tooltip: The PolicyServer that will receive the requests to be validated.
    module:
      label: Module
      tooltip: This is the WebAssembly module that holds the validation or mutation logic.
    mutating:
      label: Mutating
      tooltip: A mutating policy will rebuild the requests with definied values that are conformant with the policy definition.
    mode:
      label: Mode
      tooltip: The monitor mode is a way to deploy policies to the cluster in a way that all requests that go through the policy will be accepted, as if the policy didn't exist. Defaults to 'Protect'.
      warning: Once the policy mode has been switched to Protect, you will not be able to revert this change.
      update:
        checkbox: Update to Protect Mode
        title: Update Policy Mode
        body: The monitor mode is a way to view the behavior of a policy without letting it make the final decision on requests that are validated by the policy.
    backgroundAudit:
      label: Background Audit
      tooltip: 'Indicates whether a policy should be used or skipped when performing audit checks. If false, the policy cannot produce meaningful evaluation results during audit checks and will be skipped. The default is "true".'
    ignoreRancherNamespaces:
      label: Ignore Rancher Namespaces
      tooltip: Certain policies will break core services of Rancher, this will add a default list of namespaces to ignore.
    namespaceSelector:
      label: Namespace Selector
      description: NamespaceSelector decides whether to evaluate the policy on a request, based on whether the namespace for that request matches the selector. If the object of the request is a namespace, the matching is performed on object.metadata.labels. If the object is another cluster scoped resource, it never skips the policy evaluation.
      addSelector: Add Selectors
      matchExpressions:
        label: Match Expressions
        tooltip: matchExpressions is a list of label selector requirements.
      matchLabels:
        label: Match Labels
        tooltip: "matchLabels is a map of key, value pairs. A single key, value in the matchLabels map is equivalent to an element of matchExpressions, whose key field is 'key', the operator is 'In', and the values array contains only 'value'."
    rules:
      add: Add Rule Set
      remove: Remove Rule Set
    apiGroups:
      label: API Groups
      tooltip: The API groups the resources belong to.
    apiVersions:
      label: API Versions
      tooltip: The API versions the resources belong to.
    operations:
      label: Operation type
      tooltip: The operations the admission hook cares about - CREATE, UPDATE, DELETE, CONNECT.
    resources:
      label: Resource type
      tooltip: The targeted resources for the policy. Needs to be a resource that is supported by the policy, this is determined in the `metadata.yml` of the selected policy.
    scope:
      label: Scope
      tooltip: Specifies the scope of this rule. Valid values are "Cluster", "Namespaced", and "". "Cluster" means that only cluster-scoped resources will match this rule. Namespace API objects are cluster-scoped. "Namespaced" means that only namespaced resources will match this rule. "" means that there are no scope restrictions. Subresources match the scope of their parent resource. Default is "*".
    contextAware:
      label: Context Aware Resources
      description: A list of Kubernetes resources the policy is allowed to access at evaluation time. Access to these resources is done using the ServiceAccount of the PolicyServer the policy is assigned to.
      warning: >-
        Kubewarden administrators need to thoroughly examine the types of resources that a policy will access in order to prevent any misuse or abuse of the system. In some cases, it may be necessary to increase the permissions of the ServiceAccount associated with the PolicyServer to enable the policy to retrieve the required information. Although policies are restricted to read-only access to Kubernetes resources, there is a risk that a malicious attacker could exploit a Kubewarden policy to extract sensitive data from the cluster.
      resource:
        add: Add Resource
        remove: Remove Resource
        apiVersion:
          label: API Version
          tooltip: This is the apiVersion of the resource (v1 for core group, groupName/groupVersions for other).
        kind:
          label: Kind
          tooltip: Singular PascalCase name of the resource
  policyServerConfig:
    defaultImage:
      label: Default Image
      tooltip: Use the default `policy-server` container image.
      versionWarning: The latest stable version for Policy Server could not be determined, falling back to default.
    image:
      label: Image URL
      tooltip: This is the container image the policy server.
    replicas: Replicas
    registry:
      description: The PolicyServer allows you to pull policies from OCI registries and HTTP servers, by default HTTPS is enforced with host TLS verification. You can interact with registries using untrusted certificates or even without TLS by using the `insecureSources` setting. This approach is highly discouraged in environments closer to production. More information on configuring custom certificate authorities can be found <a href="https://docs.kubewarden.io/operator-manual/policy-servers/custom-cas" target="_blank" rel="noopener noreferrer nofollow">here</a>.
    insecureSources:
      title: Insecure Sources
      addLabel: Add Insecure Source
      placeholder: registry-dev.example.com:5500
    sourceAuthorities:
      title: Source Authorities
      add: Add Source Authority
      endpoint: Registry URI Endpoint
      placeholder: registry-pre.example.com:5500
      certificate:
        label: Certificate
        add: Add PEM Certificate
        remove: Remove Certificate
        file: Read Certificate from File
    verification:
      label: Verification Config
      description: This is the name of a VerificationConfig configmap within the same namespace, containing a Sigstore verification configuration. The configuration must be under a key named verification-config in the Configmap. More information can be found in the <a href="https://docs.kubewarden.io/distributing-policies/secure-supply-chain#configuring-the-policy-server-to-check-policy-signatures" target="_blank" rel="noopener noreferrer nofollow">Kubewarden docs</a>.
  policyCharts:
    signedPolicy:
      label: Signed
      tooltip: This policy has been signed with { signatures }.
    mutationPolicy:
      label: Mutation
      tooltip: A mutating policy will rebuild the requests with definied values that are conformant with the policy definition.
    contextAware:
      label: Context Aware
      tooltip: Can determine whether an AdmissionRequest has to be accepted or rejected based on other resources already deployed in the cluster.
  policyReporter:
    title: Policy Reporter
    link: Policy Reporter UI
    noSchema:
      banner: Kubewarden has not been installed, this will need to be accomplished before installing the Policy Reporter
      link: Install Kubewarden
    incompatible:
      banner: 'Your cluster does not support policy reports, upgrade your Kubewarden to version `1.7.0` or greater to add the required crds.'
      current: Current Kubewarden Controller version
      noCrds:
        banner: 'The CRDs for `wgpolicyk8s.io.clusterpolicyreport` or `wgpolicyk8s.io.policyreport` can not be found. These must be installed to support policy reports.'
    service:
      main:
        banner:
          unavailable: 'The Policy Reporter service is unavailable, ensure the properties `auditScanner.enable` and `auditScanner.policyReporter` are set to `true` within the Kubewarden Controller chart.'
      ui:
        banner:
          unavailable: 'The Policy Reporter UI service is unavailable, ensure the property `policy-reporter.ui.enabled` is set to `true` within the Kubewarden Controller chart.'
    url:
      banner:
        unavailable: The Policy Reporter UI proxy URL is unavailble, please ensure that the UI is properly configured.
    deployment:
      banner:
        unavailable: "The Policy Reporter UI Deployment is currently in a `{ state }` state, please wait."
    headers:
      label: Compliance
      description: When using the Kubewarden Audit Scanner, the results of the policy scans are stored using the PolicyReport Custom Resource.
      policyReportsTab:
        policy:
          label: Policy
        rule:
          label: Rule
        severity:
          label: Severity
        status:
          label: Status
        message:
          title: Message
        properties:
          policy-uid: policy-uid
          version: policy-resource-version
          mutating: mutating
          validating: validating

asyncButton:
  artifactHub:
    action: Add ArtifactHub To Whitelist
    success: Added
    waiting: Adding&hellip;
  certManager:
    action: Apply Cert-Manager Package
    success: Applied
    waiting: Installing&hellip;
  kubewardenRepository:
    action: Add Kubewarden Repository
    success: Added
    waiting: Adding&hellip;
  grafanaDashboard:
    action: Add Grafana Dashboards
    success: Added
    wating: Adding&hellip;
  policyReporterRepo:
    action: Add Policy Reporter Repository
    success: Added
    waiting: Adding&hellip;
  policyReporterChart:
    action: Install Policy Reporter Chart
    success: Installed
    waiting: Installing&hellip;
